from django.core.management.base import BaseCommand
from core.models import User, Role, UserRole

class Command(BaseCommand):
    help = '‡∏Å‡∏≥‡∏´‡∏ô‡∏î default role "Basic User" ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö user ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ role'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ user ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö default role ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á',
        )

    def handle(self, *args, **options):
        # ‡∏´‡∏≤ default role "Basic User"
        default_role = Role.objects.filter(
            name='Basic User',
            is_active=True
        ).first()
        
        if not default_role:
            self.stdout.write(
                self.style.ERROR('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö default role "Basic User" ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô setup_role_system.py ‡∏Å‡πà‡∏≠‡∏ô')
            )
            return
        
        # ‡∏´‡∏≤ user ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ role
        users_without_roles = User.objects.filter(
            is_active=True
        ).exclude(
            user_roles__is_active=True
        ).distinct()
        
        if not users_without_roles.exists():
            self.stdout.write(
                self.style.SUCCESS('‚úÖ ‡∏ó‡∏∏‡∏Å user ‡∏°‡∏µ role ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß')
            )
            return
        
        if options['dry_run']:
            self.stdout.write(
                self.style.WARNING(f'üîç ‡∏û‡∏ö user {users_without_roles.count()} ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ role:')
            )
            for user in users_without_roles:
                self.stdout.write(f'   - {user.username} ({user.get_full_name() or "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠"})')
            self.stdout.write(
                self.style.WARNING(f'‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î role "{default_role.name}" ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö user ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ')
            )
            return
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î default role
        count = 0
        for user in users_without_roles:
            try:
                UserRole.objects.create(
                    user=user,
                    role=default_role,
                    is_active=True
                )
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î default role ‡πÉ‡∏´‡πâ {user.username}')
                )
                count += 1
            except Exception as e:
                self.stdout.write(
                    self.style.ERROR(f'‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≥‡∏´‡∏ô‡∏î role ‡πÉ‡∏´‡πâ {user.username}: {e}')
                )
        
        self.stdout.write(
            self.style.SUCCESS(f'\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î default role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö user {count} ‡∏Ñ‡∏ô')
        ) 