#!/usr/bin/env python
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö Role ‡πÉ‡∏´‡∏°‡πà
"""
import os
import django

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Django environment
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'aams_backend.settings')
django.setup()

from core.models import User, Role, Permission, UserRole, RolePermission

def create_roles():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á Role ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"""
    print("=== ‡∏™‡∏£‡πâ‡∏≤‡∏á Role ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ===")
    
    roles_data = [
        {
            'name': 'System Administrator',
            'description': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á',
            'color': '#dc3545'
        },
        {
            'name': 'Project Manager',
            'description': '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£',
            'color': '#fd7e14'
        },
        {
            'name': 'Team Lead',
            'description': '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡∏° ‡∏î‡∏π‡πÅ‡∏•‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
            'color': '#ffc107'
        },
        {
            'name': 'Senior Agent',
            'description': '‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™ ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏π‡∏á',
            'color': '#28a745'
        },
        {
            'name': 'Agent',
            'description': '‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢',
            'color': '#17a2b8'
        },
        {
            'name': 'Basic User',
            'description': '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
            'color': '#6f42c1'
        },
        {
            'name': 'Trainee',
            'description': '‡∏ú‡∏π‡πâ‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏∞‡∏ö‡∏ö',
            'color': '#6c757d'
        },
        {
            'name': 'HR',
            'description': '‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡∏î‡∏π‡πÅ‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á',
            'color': '#e83e8c'
        }
    ]
    
    created_roles = []
    for role_data in roles_data:
        role, created = Role.objects.get_or_create(
            name=role_data['name'],
            defaults=role_data
        )
        if created:
            print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Role: {role.name}")
        else:
            print(f"‚è≠Ô∏è  Role ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß: {role.name}")
        created_roles.append(role)
    
    return created_roles

def create_permissions():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á Permission ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"""
    print("\n=== ‡∏™‡∏£‡πâ‡∏≤‡∏á Permission ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ===")
    
    permissions_data = [
        # System permissions
        {'name': 'view_dashboard', 'description': '‡∏î‡∏π‡∏´‡∏ô‡πâ‡∏≤ Dashboard', 'category': 'system'},
        {'name': 'manage_users', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'system'},
        {'name': 'manage_roles', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Role', 'category': 'system'},
        {'name': 'manage_permissions', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Permission', 'category': 'system'},
        
        # Project permissions
        {'name': 'view_projects', 'description': '‡∏î‡∏π‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'create_projects', 'description': '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'edit_projects', 'description': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'delete_projects', 'description': '‡∏•‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'assign_agents', 'description': '‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå', 'category': 'project'},
        
        # User permissions
        {'name': 'view_user_profiles', 'description': '‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'edit_user_profiles', 'description': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'view_user_roles', 'description': '‡∏î‡∏π Role ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'assign_user_roles', 'description': '‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Role ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
    ]
    
    created_permissions = []
    for perm_data in permissions_data:
        permission, created = Permission.objects.get_or_create(
            name=perm_data['name'],
            defaults=perm_data
        )
        if created:
            print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Permission: {permission.name} ({permission.category})")
        else:
            print(f"‚è≠Ô∏è  Permission ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß: {permission.name}")
        created_permissions.append(permission)
    
    return created_permissions

def assign_role_permissions(roles, permissions):
    """‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Permission ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö Role"""
    print("\n=== ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Permission ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö Role ===")
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Permission ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Role
    role_permissions = {
        'System Administrator': [perm.name for perm in permissions],  # ‡∏ó‡∏∏‡∏Å Permission
        'Project Manager': [
            'view_dashboard', 'view_projects', 'create_projects', 'edit_projects',
            'assign_agents', 'view_user_profiles', 'view_user_roles'
        ],
        'Team Lead': [
            'view_dashboard', 'view_projects', 'edit_projects', 'assign_agents',
            'view_user_profiles', 'view_user_roles'
        ],
        'Senior Agent': [
            'view_dashboard', 'view_projects', 'view_user_profiles'
        ],
        'Agent': [
            'view_dashboard', 'view_projects'
        ],
        'Basic User': [
            'view_dashboard'
        ],
        'Trainee': [
            'view_dashboard'
        ],
        'HR': [
            'view_user_profiles', 'edit_user_profiles'
        ]
    }
    
    for role in roles:
        if role.name in role_permissions:
            permission_names = role_permissions[role.name]
            for perm_name in permission_names:
                try:
                    permission = Permission.objects.get(name=perm_name)
                    role_perm, created = RolePermission.objects.get_or_create(
                        role=role,
                        permission=permission,
                        defaults={'is_active': True}
                    )
                    if created:
                        print(f"‚úÖ ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ {permission.name} ‡πÉ‡∏´‡πâ {role.name}")
                except Permission.DoesNotExist:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Permission: {perm_name}")

def assign_users_to_roles():
    """‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"""
    print("\n=== ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ===")
    
    # ‡∏•‡∏ö UserRole ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    UserRole.objects.all().delete()
    print("üóëÔ∏è ‡∏•‡∏ö UserRole ‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    
    # ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Role ‡∏ï‡∏≤‡∏° is_superuser ‡πÅ‡∏•‡∏∞ is_staff
    admin_role = Role.objects.get(name='System Administrator')
    manager_role = Role.objects.get(name='Project Manager')
    agent_role = Role.objects.get(name='Agent')
    
    for user in User.objects.filter(is_active=True):
        if user.is_superuser:
            UserRole.objects.create(user=user, role=admin_role, is_active=True)
            print(f"‚úÖ ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ System Administrator ‡πÉ‡∏´‡πâ {user.username}")
        elif user.is_staff:
            UserRole.objects.create(user=user, role=manager_role, is_active=True)
            print(f"‚úÖ ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Project Manager ‡πÉ‡∏´‡πâ {user.username}")
        else:
            UserRole.objects.create(user=user, role=agent_role, is_active=True)
            print(f"‚úÖ ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Agent ‡πÉ‡∏´‡πâ {user.username}")

def show_summary():
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    print("\n=== ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===")
    
    print(f"üë• ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {User.objects.filter(is_active=True).count()} ‡∏Ñ‡∏ô")
    print(f"üé≠ Role ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {Role.objects.filter(is_active=True).count()} ‡∏ä‡∏ô‡∏¥‡∏î")
    print(f"üîê Permission ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {Permission.objects.filter(is_active=True).count()} ‡∏ä‡∏ô‡∏¥‡∏î")
    print(f"üîó UserRole ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {UserRole.objects.filter(is_active=True).count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"üîó RolePermission ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {RolePermission.objects.filter(is_active=True).count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    
    print("\nüìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Role:")
    for role in Role.objects.filter(is_active=True):
        user_count = role.user_roles.filter(is_active=True, user__is_active=True).count()
        perm_count = role.role_permissions.filter(is_active=True, permission__is_active=True).count()
        print(f"   {role.name}: {user_count} ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, {perm_count} Permission")

if __name__ == "__main__":
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö Role ‡πÉ‡∏´‡∏°‡πà")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Role ‡πÅ‡∏•‡∏∞ Permission
    roles = create_roles()
    permissions = create_permissions()
    
    # ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Permission ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö Role
    assign_role_permissions(roles, permissions)
    
    # ‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢ Role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    assign_users_to_roles()
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ
    show_summary()
    
    print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö Role ‡πÉ‡∏´‡∏°‡πà")
    print("\nüéØ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ Role ‡πÅ‡∏•‡∏∞ Permission ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
    print("üìã API endpoints ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ:")
    print("   - GET /api/roles/ - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Role")
    print("   - GET /api/permissions/ - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Permission")
    print("   - GET /api/user-roles/ - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ UserRole")
    print("   - GET /api/role-permissions/ - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ RolePermission") 