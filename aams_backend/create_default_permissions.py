#!/usr/bin/env python
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á default permissions ‡πÅ‡∏•‡∏∞ roles
"""

import os
import django

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'aams_backend.settings')
django.setup()

from core.models import Permission, Role, User, UserRole, RolePermission
from django.contrib.auth.models import Group

def create_default_permissions():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á default permissions"""
    print("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á default permissions...")
    
    permissions_data = [
        # User Management
        {'name': 'user_management', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'user_create', 'description': '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'user_edit', 'description': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'user_delete', 'description': '‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        {'name': 'user_view', 'description': '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'user'},
        
        # Role Management
        {'name': 'role_management', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó', 'category': 'role'},
        {'name': 'role_create', 'description': '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó', 'category': 'role'},
        {'name': 'role_edit', 'description': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó', 'category': 'role'},
        {'name': 'role_delete', 'description': '‡∏•‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó', 'category': 'role'},
        {'name': 'role_view', 'description': '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó', 'category': 'role'},
        
        # Permission Management
        {'name': 'permission_management', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå', 'category': 'permission'},
        {'name': 'permission_assign', 'description': '‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå', 'category': 'permission'},
        {'name': 'permission_revoke', 'description': '‡πÄ‡∏û‡∏¥‡∏Å‡∏ñ‡∏≠‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå', 'category': 'permission'},
        {'name': 'permission_view', 'description': '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå', 'category': 'permission'},
        
        # Project Management
        {'name': 'project_management', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'project_create', 'description': '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'project_edit', 'description': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'project_delete', 'description': '‡∏•‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        {'name': 'project_view', 'description': '‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£', 'category': 'project'},
        
        # Report Management
        {'name': 'report_management', 'description': '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'category': 'report'},
        {'name': 'report_create', 'description': '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'category': 'report'},
        {'name': 'report_edit', 'description': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'category': 'report'},
        {'name': 'report_delete', 'description': '‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'category': 'report'},
        {'name': 'report_view', 'description': '‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô', 'category': 'report'},
        
        # Dashboard Access
        {'name': 'dashboard_access', 'description': '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î', 'category': 'dashboard'},
        {'name': 'dashboard_admin', 'description': '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö', 'category': 'dashboard'},
        {'name': 'dashboard_user', 'description': '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', 'category': 'dashboard'},
    ]
    
    created_count = 0
    for perm_data in permissions_data:
        permission, created = Permission.objects.get_or_create(
            name=perm_data['name'],
            defaults={
                'description': perm_data['description'],
                'category': perm_data['category'],
                'is_active': True
            }
        )
        if created:
            created_count += 1
            print(f"  ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á permission: {permission.name}")
    
    print(f"‡∏™‡∏£‡πâ‡∏≤‡∏á permissions ‡πÉ‡∏´‡∏°‡πà {created_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

def create_default_roles():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á default roles"""
    print("\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á default roles...")
    
    roles_data = [
        {
            'name': 'System Administrator',
            'description': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á',
            'color': '#dc3545',
            'permissions': [
                'user_management', 'user_create', 'user_edit', 'user_delete', 'user_view',
                'role_management', 'role_create', 'role_edit', 'role_delete', 'role_view',
                'permission_management', 'permission_assign', 'permission_revoke', 'permission_view',
                'project_management', 'project_create', 'project_edit', 'project_delete', 'project_view',
                'report_management', 'report_create', 'report_edit', 'report_delete', 'report_view',
                'dashboard_access', 'dashboard_admin', 'dashboard_user'
            ]
        },
        {
            'name': 'Project Manager',
            'description': '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô',
            'color': '#007bff',
            'permissions': [
                'user_view',
                'role_view',
                'project_management', 'project_create', 'project_edit', 'project_view',
                'report_management', 'report_create', 'report_edit', 'report_view',
                'dashboard_access', 'dashboard_user'
            ]
        },
        {
            'name': 'Team Lead',
            'description': '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡∏° ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô',
            'color': '#28a745',
            'permissions': [
                'user_view',
                'project_view',
                'report_view',
                'dashboard_access', 'dashboard_user'
            ]
        },
        {
            'name': 'Senior Agent',
            'description': '‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå‡∏≠‡∏≤‡∏ß‡∏∏‡πÇ‡∏™ ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô',
            'color': '#ffc107',
            'permissions': [
                'user_view',
                'project_view',
                'report_view',
                'dashboard_access', 'dashboard_user'
            ]
        },
        {
            'name': 'Agent',
            'description': '‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
            'color': '#6c757d',
            'permissions': [
                'user_view',
                'project_view',
                'dashboard_access', 'dashboard_user'
            ]
        },
        {
            'name': 'Trainee',
            'description': '‡∏ú‡∏π‡πâ‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏Å‡∏±‡∏î',
            'color': '#17a2b8',
            'permissions': [
                'user_view',
                'project_view',
                'dashboard_access', 'dashboard_user'
            ]
        },
        {
            'name': 'HR',
            'description': '‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
            'color': '#e83e8c',
            'permissions': [
                'user_management', 'user_create', 'user_edit', 'user_view',
                'role_view',
                'project_view',
                'report_view',
                'dashboard_access', 'dashboard_user'
            ]
        }
    ]
    
    created_count = 0
    for role_data in roles_data:
        role, created = Role.objects.get_or_create(
            name=role_data['name'],
            defaults={
                'description': role_data['description'],
                'color': role_data['color'],
                'is_active': True
            }
        )
        
        if created:
            created_count += 1
            print(f"  ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á role: {role.name}")
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î permissions ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö role
        for perm_name in role_data['permissions']:
            try:
                permission = Permission.objects.get(name=perm_name, is_active=True)
                role_perm, perm_created = RolePermission.objects.get_or_create(
                    role=role,
                    permission=permission,
                    defaults={
                        'granted_by': User.objects.filter(is_superuser=True).first(),
                        'is_active': True
                    }
                )
                if perm_created:
                    print(f"    üîê ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: {permission.name}")
            except Permission.DoesNotExist:
                print(f"    ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö permission: {perm_name}")
    
    print(f"‡∏™‡∏£‡πâ‡∏≤‡∏á roles ‡πÉ‡∏´‡∏°‡πà {created_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")

def assign_superadmin_role():
    """‡∏Å‡∏≥‡∏´‡∏ô‡∏î Super Admin role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö superuser"""
    print("\n‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î Super Admin role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö superuser...")
    
    try:
        # ‡∏´‡∏≤ superuser ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å
        superuser = User.objects.filter(is_superuser=True).first()
        if not superuser:
            print("  ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö superuser")
            return
        
        # ‡∏´‡∏≤ System Administrator role
        admin_role = Role.objects.filter(name='System Administrator', is_active=True).first()
        if not admin_role:
            print("  ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö System Administrator role")
            return
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö superuser
        user_role, created = UserRole.objects.get_or_create(
            user=superuser,
            role=admin_role,
            defaults={
                'assigned_by': superuser,
                'is_active': True
            }
        )
        
        if created:
            print(f"  ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î System Administrator role ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö {superuser.username}")
        else:
            print(f"  ‚ÑπÔ∏è {superuser.username} ‡∏°‡∏µ System Administrator role ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
            
    except Exception as e:
        print(f"  ‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á default permissions ‡πÅ‡∏•‡∏∞ roles...")
    
    try:
        create_default_permissions()
        create_default_roles()
        assign_superadmin_role()
        
        print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á default permissions ‡πÅ‡∏•‡∏∞ roles!")
        print("\nüìã ‡∏™‡∏£‡∏∏‡∏õ:")
        print(f"  - Permissions: {Permission.objects.count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print(f"  - Roles: {Role.objects.count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print(f"  - Role Permissions: {RolePermission.objects.count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        
    except Exception as e:
        print(f"\n‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

if __name__ == '__main__':
    main() 