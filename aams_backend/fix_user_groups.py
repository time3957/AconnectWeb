#!/usr/bin/env python
"""
Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
"""
import os
import django

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Django environment
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'aams_backend.settings')
django.setup()

from core.models import User
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType

def setup_groups_and_permissions():
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå"""
    print("=== ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ===")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏•‡∏∏‡πà‡∏°
    groups_data = {
        'Admin': {
            'description': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö - ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ï‡πá‡∏°',
            'users': ['admin', 'adminuser'],
            'permissions': ['add', 'change', 'delete', 'view']
        },
        'Supervisor': {
            'description': '‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡∏°',
            'users': ['manager'],
            'permissions': ['add', 'change', 'view']
        },
        'Agent': {
            'description': '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô - ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£',
            'users': ['user1'],
            'permissions': ['view']
        }
    }
    
    # ‡∏î‡∏∂‡∏á ContentType ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User ‡πÅ‡∏•‡∏∞ Project
    user_ct = ContentType.objects.get_for_model(User)
    project_ct = ContentType.objects.get_for_model(User)  # ‡πÉ‡∏ä‡πâ User model ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    
    for group_name, group_info in groups_data.items():
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏•‡∏∏‡πà‡∏°
        group, created = Group.objects.get_or_create(name=group_name)
        if created:
            print(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° '{group_name}' ‡πÉ‡∏´‡∏°‡πà")
        else:
            print(f"üìù ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏•‡∏∏‡πà‡∏° '{group_name}' ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà")
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° permissions
        permissions_to_add = []
        for action in group_info['permissions']:
            try:
                perm = Permission.objects.get(
                    codename=f'{action}_user',
                    content_type=user_ct
                )
                permissions_to_add.append(perm)
            except Permission.DoesNotExist:
                print(f"‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö permission: {action}_user")
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° permissions ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏∏‡πà‡∏°
        group.permissions.set(permissions_to_add)
        print(f"   ‡πÄ‡∏û‡∏¥‡πà‡∏° {len(permissions_to_add)} permissions")
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
        users_added = 0
        for username in group_info['users']:
            try:
                user = User.objects.get(username=username)
                user.groups.add(group)
                users_added += 1
                print(f"   ‡πÄ‡∏û‡∏¥‡πà‡∏° {username} ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° {group_name}")
            except User.DoesNotExist:
                print(f"‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {username}")
        
        print(f"   ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {users_added} ‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°\n")

def show_current_status():
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"""
    print("=== ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ===")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞ permissions
    print("\nüìã ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞ Permissions:")
    for group in Group.objects.all():
        print(f"\nüë• {group.name}")
        print(f"   Permissions: {group.permissions.count()} ‡∏ï‡∏±‡∏ß")
        if group.permissions.count() > 0:
            for perm in group.permissions.all()[:5]:  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 5 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å
                print(f"     - {perm.codename}")
            if group.permissions.count() > 5:
                print(f"     ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {group.permissions.count() - 5} ‡∏ï‡∏±‡∏ß")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°
    print("\nüë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°:")
    for user in User.objects.all():
        groups = [g.name for g in user.groups.all()]
        print(f"   {user.username}: {groups if groups else '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°'}")
        print(f"     is_staff: {user.is_staff}, is_superuser: {user.is_superuser}")

def test_api_access():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API"""
    print("\n=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API ===")
    
    from django.test import Client
    from django.contrib.auth import authenticate
    
    client = Client()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö login
    print("\n1. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Login:")
    for username in ['admin', 'manager', 'user1']:
        try:
            user = authenticate(username=username, password=f'{username}123')
            if user:
                print(f"   ‚úÖ {username}: Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                print(f"      Groups: {[g.name for g in user.groups.all()]}")
                print(f"      Permissions: {user.get_all_permissions()}")
            else:
                print(f"   ‚ùå {username}: Login ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
        except Exception as e:
            print(f"   ‚ùå {username}: Error - {e}")

if __name__ == "__main__":
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå")
    
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
    setup_groups_and_permissions()
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    show_current_status()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API
    test_api_access()
    
    print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå")
    print("\nüìã ‡∏™‡∏£‡∏∏‡∏õ:")
    print("1. Admin: admin, adminuser (‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ï‡πá‡∏°)")
    print("2. Supervisor: manager (‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£)")
    print("3. Agent: user1 (‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)")
    print("\nüéØ ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß") 